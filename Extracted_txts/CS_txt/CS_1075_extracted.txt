Chapter 10: Structures 375

 

()

e2.salary = e1.salary ;

I" copying all elements at one go */
3 = e2;

printf ( "In%s %d %f", e1.name, e1.age, e1.salary ) ;
printf ( "In%s %d %f", e2.name, e2.age, e2.salary ) ;
printf ( "In%s %d %f", e3.name, e3.age, e3.salary ) ;

The output of the program would be...

Sanjay 30 5500.500000
Sanjay 30 5500.500000
Sanjay 30 5500.500000

Ability to copy the contents of all structure elements of one
variable into the corresponding elements of another structure
variable is rather surprising, since C does not allow assigning
the contents of one array to another just by equating the two.
As we saw earlier, for copying arrays we have to copy the
contents of the array element by element.

This copying of all structure elements at one go has been
possible only because the structure elements are stored in
contiguous memory locations. Had this not been so, we would
have been required to copy structure variables element by
element. And who knows, had this been so, structures would
not have become popular at all.

One structure can be nested within another structure. Using
this facility complex data types can be created. The following
program shows nested structures at work.

main()
{
struct address
