408 Let Us C

 

}
And here is the output...

Enter name Jonty Rhodes
Jonty

Surprised? Where did “Rhodes” go? It never got stored in the array
name[ ], because the moment the blank was typed after “Jonty”
scanf( ) assumed that the name being entered has ended. The result
is that there is no way (at least not without a lot of trouble on the
programmer’s part) to enter a multi-word string into a single
variable (name in this case) using scanf( ). The solution to this
problem is to use gets( ) function. As said earlier, it gets a string
from the keyboard. It is terminated when an Enter key is hit. Thus,
spaces and tabs are perfectly acceptable as part of the input string.
More exactly, gets( ) gets a newline (\n) terminated string of
characters from the keyboard and replaces the \n with a \0.

The puts( ) function works exactly opposite to gets( ) function. It
outputs a string to the screen.

Here is a program which illustrates the usage of these functions:
main()
char footballer[40] ;
puts
gets

puts
puts

"Enter name" ) ;

footballer ) ; /* sends base address of array */
“Happy footballing!" ) ;

footballer ) ;

}

Following is the sample output:

Enter name
