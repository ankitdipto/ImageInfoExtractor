26.2. The Ford-Fulkerson method 731

these additional constraints into the problem of finding a maximum flow ina single-
source, single-sink flow network.

26.2-7
Prove Lemma 26.2.

26.2-8
Suppose that we redefine the residual network to disallow edges into s. Argue that
the procedure FORD-FULKERSON still correctly computes a maximum flow.

26.2-9

Suppose that both f and /’ are flows in a network G and we compute flow f ¢ f’.
Does the augmented flow satisfy the flow conservation property? Does it satisfy
the capacity constraint?

26.2-10

Show how to find a maximum flow in a network G = (V, E) by a sequence of at
most |E| augmenting paths. (Hint: Determine the paths after finding the maximum
flow.)

26.2-11

The edge connectivity of an undirected graph is the minimum number k of edges
that must be removed to disconnect the graph. For example, the edge connectivity
of a tree is 1, and the edge connectivity of a cyclic chain of vertices is 2. Show
how to determine the edge connectivity of an undirected graph G = (V, E) by
running a maximum-flow algorithm on at most |V| flow networks, each having
O(V) vertices and O(E) edges.

26.2-12

Suppose that you are given a flow network G, and G has edges entering the
source s. Let f be a flow in G in which one of the edges (v, s) entering the source
has f(v,s) = 1. Prove that there must exist another flow f’ with f’(v.s) = 0
such that | f| = | f’|. Give an O(£)-time algorithm to compute f’, given f, and
assuming that all edge capacities are integers.

26.2-13

Suppose that you wish to find, among all minimum cuts in a flow network G with
integral capacities, one that contains the smallest number of edges. Show how to
modify the capacities of G to create a new flow network G’ in which any minimum
cut in G’ is a minimum cut with the smallest number of edges in G.
