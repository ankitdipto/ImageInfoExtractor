482 Let Us C

 

variations. The smallest element in memory on which we are

able to operate as yet is a byte; and we operated on it by
making use of the data type char. However, we haven’t attempted
to look within these data types to see how they are constructed out
of individual bits, and how these bits can be manipulated. Being
able to operate on a bit level, can be very important in
programming, especially when a program must interact directly
with the hardware. This is because, the programming languages
are byte oriented, whereas hardware tends to be bit oriented. Let us
now delve inside the byte and see how it is constructed and how it
can be manipulated effectively. So let us take apart the byte... bit
by bit.

S: far we have dealt with characters, integers, floats and their

Bitwise Operators

One of C’s powerful features is a set of bit manipulation operators.
These permit the programmer to access and manipulate individual
bits within a piece of data. The various Bitwise Operators available
in C are shown in Figure 14.1.

 

 

 

Operator Meaning

~ One’s complement

>> Right shift

<< Left shift

& Bitwise AND

| Bitwise OR

“ Bitwise XOR(Exclusive OR)

 

 

 

 

 

Figure 14.1

These operators can operate upon ints and chars but not on floats
and doubles. Before moving on to the details of the operators, let

 
