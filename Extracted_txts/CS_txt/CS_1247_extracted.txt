 

BUILDING A

KNOWLEDGE BASE

 

 

KNOWLEDGE
ENGINEERING

KNOWLEDGE
ACQUISITION

QNTOLOGICAL
ENGINEERING

 

In which we develop a methodology for building knowledge bases for particular
domains, sketch a representation for the world in general, and go shopping.

The previous chapter showed that first-order logic is a powerful tool for knowledge representation
and reasoning. However, a logic by itself consists of only the syntax, semantics, and proof theory.
A logic does not offer any guidance as to what facts should be expressed, nor what vocabulary
should be used to express them.

The process of building a knowledge base is called knowledge engineering. A knowledge
engineer is someone who investigates aparticular domain, determines what concepts are important
in that domain, and creates a formal representation of the objects and relations in the domain.
Often, the knowledge engineer is trained in representation but is not an expert in the domain
at hand, be it circuit design, space station mission scheduling, or whatever. The knowledge
engineer will usually interview the real experts to become educated about the domain and to
elicit the required knowledge, in a process called knowledge acquisition. This occurs prior to,
or interleaved with, the process of creating formal representations. In this chapter, we will use
domains that should already be fairly familiar, so that we can concentrate on the representational
issues involved.

One does not become a proficient knowledge engineer just by studying the syntax and
semantics of a representation language. It takes practice and exposure to lots of examples before
one can develop a good style in any language, be it a language for programming, reasoning, or
communicating. Sections 8.1 and 8.2 discuss the principles and pitfalls ofknowledge engineering.
We then show how to represent knowledge in the fairly narrow domain of electronic circuits in
Section 8.3. A number of narrow domains can be tackled by similar techniques, but domains
such as shopping in a supermarket seem to require much more general representations. In
Section 8.4, we discuss ways to represent time, change, objects, substances, events, actions,
money, measures, and so on. These are important because they show up in one form or another
in every domain. Representing these very general concepts is sometimes called ontological
engineering. Section 8.5 describes in detail a simplified shopping environment, and uses the
general ontology to develop representations capable of sustaining rational action in the domain.

217

 
