sed Let Us C

# include <stdarg.h>
int findmax (int, ... );
void main( )

{

int max;

max = findmax ( 5, 23, 15, 1, 92, 50) ;
printf ( "\nmaximum = %d", max ) ;

max = findmax (3, 100, 300, 29) ;
printf ( "\nmaximum = %d", max ) ;

}

canes tot_num, ... )
int max, count, num ;
va_list ptr;

va_start ( ptr, tot_num ) ;
max = va_arg ( ptr, int) ;

Co count = 1 ; count < tot_num ; count++ )
num = va_arg ( ptr, int) ;
if (num > max )
max = num ;

}

return ( max ) ;

}

Note how the findmax( ) function has been declared. The ellipses

(... ) indicate that the numb
er of argum 2
argument would be variable. ome ete

Here we are making two calls to findmax(), first time to find
maximum out of 5 values and second time. to find maximum out of

Chapter 15: Miscellaneous Features 535

3 values. Note that for each call the first argument is the count of
arguments that follow the: first argument. The value of the first
argument passed to findmax() is collected in the variable
tot_num. findmax() begins with a declaration of a pointer ptr of
the type va_list. Observe the next statement carefully:

va_start ( ptr, tot_num );

This statement sets up ptr such that it points to the first variable
argument in the list. If we are considering the first call to
finndmax( ), ptr would now point to 23. The statement max =
ya_arg ( ptr, int ) would assign the integer being pointed to by
ptr to max. Thus 23 would be assigned to max, and ptr would
now start pointing to the next argument, ie 15. The rest of the
program is fairly straightforward. We just keep picking up
successive numbers in the list and keep comparing them with the

latest value in max, till all the arguments in the list have been
scanned. The final value in max is then returned to main().

How about another program to fix your ideas? This one calls a
function display() which is capable of printing any number of
arguments of any type.

#include <stdio.h>
# include <stdarg.h>
void display ( int, int, ... );

void main( )
display ( 4,2, 5,6);
display (2, 4, ‘A’, ‘a bi 'c);
display ( 3, 3, 2.5, 299.3, -1.0);
}
void display (int type, int num, ...)
{
int i,j;
char ¢;

518
