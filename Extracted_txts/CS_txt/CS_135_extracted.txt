750

Chapter 26 Maximum Flow

Proof By the definition of an admissible edge, we can push flow from u to v.
Since u is overflowing, the operation PUSH(u, v) applies. The only new residual
edge that pushing flow from wu to v can create is (v,u). Since v.h = u.h—1,
edge (v,u) cannot become admissible. If the operation is a saturating push, then
cy (u,v) = 0 afterward and (uw, v) becomes inadmissible. .

Lemma 26.28

Let G = (V, E) be a flow network, let f be a preflow in G, and suppose that
the attribute /: is a height function. If a vertex wu is overflowing and there are no
admissible edges leaving u, then RELABEL(2) applies. After the relabel operation,
there is at least one admissible edge leaving u, but there are no admissible edges
entering u.

Proof If u is overflowing, then by Lemma 26.14, either a push or a relabel op-
eration applies to it. If there are no admissible edges leaving u, then no flow
can be pushed from u and so RELABEL() applies. After the relabel operation,
u.h = 1+min{v.h: (u,v) € Ey}. Thus, if v is a vertex that realizes the mini-
mum in this set, the edge (u, v) becomes admissible. Hence, after the relabel, there
is at least one admissible edge leaving u.

To show that no admissible edges enter u after a relabel operation, suppose that
there is a vertex v such that (v,u) is admissible. Then, v.h = u.h + 1 after the
relabel, and so v.h > u.h + 1 just before the relabel. But by Lemma 26.12, no
residual edges exist between vertices whose heights differ by more than 1. More-
over, relabeling a vertex does not change the residual network. Thus, (v, 1) is not
in the residual network, and hence it cannot be in the admissible network. :

Neighbor lists

Edges in the relabel-to-front algorithm are organized into “neighbor lists.” Given
a flow network G = (V, E), the neighbor list u.N for a vertex u € V isa singly
linked list of the neighbors of wu in G. Thus, vertex v appears in the list u.N if
(u,v) € E or (v,u) € E. The neighbor list u.N contains exactly those vertices v
for which there may be a residual edge (u,v). The attribute u.N. head points to
the first vertex in u.N, and v.next-neighbor points to the vertex following v in a
neighbor list; this pointer is NIL if v is the last vertex in the neighbor list.

The relabel-to-front algorithm cycles through each neighbor list in an arbitrary
order that is fixed throughout the execution of the algorithm. For each vertex u,
the attribute uv. current points to the vertex currently under consideration in u.N.
Initially, uv. current is set to u.N.head.
