26.5 The relabel-to-front algorithm 759

work performed by the while loop in RELABEL-TO-FRONT, excluding the work
performed within DISCHARGE, is at most O(V°*).

We must now bound the work performed within DISCHARGE during the ex-
ecution of the algorithm. Each iteration of the while loop within DISCHARGE
performs one of three actions. We shall analyze the total amount of work involved
in performing each of these actions.

We start with relabel operations (lines 4-5). Exercise 26.4-3 provides an O(VE)
time bound on all the O(V) relabels that are performed.

Now, suppose that the action updates the w. current pointer in line 8. This action
occurs O(degree(u)) times each time a vertex u is relabeled, and O(V -degree(u))
times overall for the vertex. For all vertices, therefore, the total amount of work
done in advancing pointers in neighbor lists is O(VE) by the handshaking lemma
(Exercise B.4-1).

The third type of action performed by DISCHARGE is a push operation (line 7).
We already know that the total number of saturating push operations is O(VE).
Observe that if a nonsaturating push is executed, DISCHARGE immediately returns,
since the push reduces the excess to 0. Thus, there can be at most one nonsaturating
push per call to DISCHARGE. As we have observed, DISCHARGE is called O(V*)
times, and thus the total time spent performing nonsaturating pushes is O(V*).

The running time of RELABEL-TO-FRONT is therefore O(V? + VE), which
is O(V). :

Exercises

26.5-1

Illustrate the execution of RELABEL-TO-FRONT in the manner of Figure 26.10 for
the flow network in Figure 26.1(a). Assume that the initial ordering of vertices in L
is (V1, V2. V3, ¥4) and that the neighbor lists are

vy.N = (8, V2.3)
v2.N = (8,01, V3. V4)
v3.N = (v1.02, 7 t)
v4.N = (v2.3.0
26.5-2 *

We would like to implement a push-relabel algorithm in which we maintain a first-
in, first-out queue of overflowing vertices. The algorithm repeatedly discharges the
vertex at the head of the queue, and any vertices that were not overflowing before
the discharge but are overflowing afterward are placed at the end of the queue.
After the vertex at the head of the queue is discharged, it is removed. When the
