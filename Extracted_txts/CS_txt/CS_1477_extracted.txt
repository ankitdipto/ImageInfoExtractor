 

1.3 Desktop Systems 11

scheme is that programs can be larger than physical memory. Further, it
abstracts main memory into a large, uniform array of storage, separating logical
memory as viewed by the user from physical memory. This arrangement frees
programmers from concern over memory-storage limitations.

â€˜Time-sharing systems must also provide a file system (Chapters 11 and 12).
The file system resides on a collection of disks; hence, disk management must
be provided (Chapter 14). Also, time-sharing systems provide a mechanism for
concurrent execution, which requires sophisticated CPU-scheduling schemes
(Chapter 6). To ensure orderly execution, the system must provide mechanisms
for job synchronization and communication (Chapter 7), and it may ensure that
jobs do not get stuck in a deadlock, forever waiting for one another (Chapter 8).

The idea of time sharing was demonstrated as early as 1960, but since
time-shared systems are difficult and expensive to build, they did not become
common until the early 1970s. Although some batch processing is still done,
most systems today are time sharing. Accordingly, multiprogramming and
time sharing are the central themes of modern operating systems, and they are
the central themes of this book.

1.3 = Desktop Systems

Personal computers PCs appeared in the 1970s. During their first decade, the
CPUs in PCs lacked the features needed to protect an operating system from
user programs. PC operating systems therefore were neither multiuser nor
multitasking. However, the goals of these operating systems have changed with
time; instead of maximizing CPU and peripheral utilization, the systems opt for
maximizing user convenience and responsiveness. These systems include PCs
running Microsoft Windows and the Apple Macintosh. The MS-DOS operating
system from Microsoft has been superseded by multiple flavors of Microsoft
Windows, and IBM has upgraded MS-DOS to the OS/2 multitasking system.
The Apple Macintosh operating system has been ported to more advanced
hardware, and now includes new features, such as virtual memory and mul-
titasking. With the release of MacOs X, the core of the operating system is now
based on Mach and FreeBSD UNIX for scalability, performance, and features, but
it retains the same rich GUI. Linux, a UNIX-like operating system available for
PCs, has also become popular recently.

Operating systems for these computers have benefited in several ways
from the development of operating systems for mainframes. Microcomputers
were immediately able to adopt some of the technology developed for larger
operating systems. On the other hand, the hardware costs for microcomputers
are sufficiently low that individuals have sole use of the computer, and CPU
utilization is no longer a prime concern. Thus, some of the design decisions
made in operating systems for mainframes may not be appropriate for smaller
systems.
