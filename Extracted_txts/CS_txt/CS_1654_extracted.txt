6.3 Scheduling Algorithms 157

6.3 = Scheduling Algorithms

CPU scheduling deals with the problem of deciding which of the processes in
the ready queue is to be allocated the CPU. In this section, we describe several
of the many CPU-scheduling algorithms that exist.

6.3.1 First-Come, First-Served Scheduling

By far the simplest CPU-scheduling algorithm is the first-come, first-served
(FCFS) scheduling algorithm. With this scheme, the process that requests the
CPU first is allocated the CPU first. The implementation of the FCFS policy is
easily managed with a FIFO queue. When a process enters the ready queue, its
PCB is linked onto the tail of the queue. When the CPU is free, it is allocated to
the process at the head of the queue. The running process is then removed from
the queue. The code for FCFS scheduling is simple to write and understand.

The average waiting time under the FCES policy, however, is often quite
long. Consider the following set of processes that arrive at time 0, with the
length of the CPU-burst time given in milliseconds:

Process Burst Time

Py 24
Py 3
P3 3

If the processes arrive in the order P,, P2, P3, and are served in FCFS order,
we get the result shown in the following Gantt chart:

 

 

Py | P2
0 24 27 30

 

Pg

 

 

The waiting time is 0 milliseconds for process P;, 24 milliseconds for process P2,
and 27 milliseconds for process P3. Thus, the average waiting time is (0 + 24 +
27)/3 = 17 milliseconds. If the processes arrive in the order P2, P3, P;, however,
the results will be as shown in the following Gantt chart:

 

Py

 

 

Pg | P3
0 3 6 30

 

 

The average waiting time is now (6 + 0 + 3)/3 = 3 milliseconds. This reduction
is substantial. Thus, the average waiting time under a FCFS policy is generally
