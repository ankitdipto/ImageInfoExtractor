268

8.7

8.8

8.9

8.10

8.11

Chapter 8 Deadlocks

b. Decrease Avnilable (resource permanently removed from system)

c. Increase Max for one process (the process needs more resources than
allowed, it may want more)

d. Decrease Max for one process (the process decides it does not need
that many resources)

e. Increase the number of processes
f. Decrease the number of processes

Prove that the safety algorithm presented in Section 8.5.3 requires an order
of m x n? operations.

Consider a system consisting of four resources of the same type that are
shared by three processes, each of which needs at most two resources.
Show that the system is deadlock-free.

Consider a system consisting of m resources of the same type, being shared
by 1 processes. Resources can be requested and released by processes only
one at a time. Show that the system is deadlock-free if the following two
conditions hold:

a. The maximum need of each process is between 1 and m resources
b. The sum of all maximum needs is less than m +n

Consider a computer system that runs 5,000 jobs per month with no
deadlock-prevention or deadlock-avoidance scheme. Deadlocks occur
about twice per month, and the operator must terminate and rerun about
10 jobs per deadlock. Each job is worth about $2 (in CPU time), and the
jobs terminated tend to be about half-done when they are aborted.

A systems programmer has estimated that a deadlock-avoidance
algorithm (like the banker’s algorithm) could be installed in the system
with an increase in the average execution time per job of about 10 percent.
Since the machine currently has 30-percent idle time, all 5,000 jobs per
month could still be run, although turnaround time would increase by
about 20 percent on average.

a. What are the arguments for installing the deadlock-avoidance algo-
rithm?

b. What are the arguments against installing the deadlock-avoidance
algorithm?

We can obtain the banker’s algorithm for a single resource type from the
general banker’s algorithm simply by reducing the dimensionality of the
various arrays by 1. Show through an example that the multiple-resource-
