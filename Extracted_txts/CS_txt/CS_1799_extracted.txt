276 Chapter9 Memory Management

A major portion of this chapter is devoted to showing how these vari-
ous bindings can be implemented effectively in a computer system and to
discussing appropriate hardware support.

9.1.2 Logical- Versus Physical-Address Space

An address generated by the CPU is commonly referred to as a logical address,
whereas an address seen by the memory unit—that is, the one loaded into
the memory-address register of the memory—is commonly referred to as a
physical address.

The compile-time and load-time address-binding methods generate iden-
tical logical and physical addresses. However, the execution-time address-
binding scheme results in differing logical and physical addresses. In this case,
we usually refer to the logical address as a virtual address. We use logical
address and virtual address interchangeably in this text. The set of all logical
addresses generated by a program is a logical-address space; the set of all phys-
ical addresses corresponding to these logical addresses is a physical-address
space. Thus, in the execution-time address-binding scheme, the logical- and
physical-address spaces differ.

The run-time mapping from virtual to physical addresses is done by a
hardware device called the memory-management unit (MMU). We can choose
from among many different methods to accomplish such a mapping, as we
discuss in Sections 9.3, 9.4, 9.5, and 9.6. For the time being, we illustrate
this mapping with a simple MMU scheme, which is a generalization of the
base-register scheme described in Section 2.5.3.

As illustrated in Figure 9.2, this method requires hardware support slightly
different from the hardware configuration discussed in Section 2.4. The base
register is now called a relocation register. The value in the relocation register
is added to every address generated by a user process at the time it is sent to
memory. For example, if the base is at 14000, then an attempt by the user
to address location 0 is dynamically relocated to location 14000; an access
to location 346 is mapped to location 14346. The MS-DOS operating system
running on the Intel 80x86 family of processors uses four relocation registers
when loading and running processes.

The user program never sees the real physical addresses. The program can
create a pointer to location 346, store it in memory, manipulate it, compare it
to other addresses—all as the number 346. Only when it is used as a memory
address (in an indirect load or store, perhaps) is it relocated relative to the base
register. The user program deals with logical addresses. The memory-mapping
hardware converts logical addresses into physical addresses. This form of
execution-time binding was discussed in Section 9.1.1. The final location ofa
referenced memory address is not determined until the reference is made.

We now have two different types of addresses: logical addresses (in the
range 0 to max) and physical addresses (in the range R + 0 to R + max for a base
