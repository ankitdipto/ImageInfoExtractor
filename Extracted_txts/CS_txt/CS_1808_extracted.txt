284  Chapter9 Memory Management

9.3.1 Memory Protection

Before discussing memory allocation, we must discuss the issue of memory pro-
tection—protecting the operating system from user processes, and protecting
user processes from one another. We can provide this protection by using a relo-
cation register, as discussed in Section 9.1.2, with a limit register, as discussed in
Section 2.5.3. The relocation register contains the value of the smallest physical
address; the limit register contains the range of logical addresses (for example,
relocation = 100040 and limit = 74600). With relocation and limit registers, each
logical address must be less than the limit register; the MMU maps the logical
address dynamically by adding the value in the relocation register. This mapped
address is sent to memory (Figure 9.5).

When the CPU scheduler selects a process for execution, the dispatcher
loads the relocation and limit registers with the correct values as part of the
context switch. Because every address generated by the CPU is checked against
these registers, we can protect both the operating system and the other users’
programs and data from being modified by this running process.

The relocation-register scheme provides an effective way to allow the
operating-system size to change dynamically. This flexibility is desirable in
many situations. For example, the operating system contains code and buffer
space for device drivers. If a device driver (or other operating-system service)
is not commonly used, we do not want to keep the code and data in memory,
as we might be able to use that space for other purposes. Such code is some-
times called transient operating-system code; it comes and goes as needed.
Thus, using this code changes the size of the operating system during program
execution.

 

limit relocation
register register

 

 

 

 

 

 
   

physical
address

logical
address

 

CPU memory

 

 

 

 

 

trap; addressing error

 

Figure 9.5 Hardware support for relocation and limit registers.
