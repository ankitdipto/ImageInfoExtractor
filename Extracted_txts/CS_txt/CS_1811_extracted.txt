data type

SECTION 8-6 Data Transfer and Manipulation 269

toread its binary code valuefrommemory. The operands must also be brought
into processor registers according to the rules of the instruction addressing
mode The last step is to execute the instruction in the processor. This last step
is implemented by means of microoperations as explained in Chap. 4 or
through an ALU and shifter as shown in Fig. 82. Some of the arithmetic
instructions need special circuits for their implementation.

Arithmetic Instructions

The four basic arithmetic operations are addition, subtraction, multiplication,
and division. Most computers provide instructions for all four operations.
Some small computers have only addition and possibly subtraction instruc-
tions. The multiplication and division must then be generated by means of
software subroutines. The four basic arithmetic operations are sufficient for
formulating solutions to scientific problems when expressed in terms of nu-
merical analysis methods.

A list of typicalarithmeticinstructionsis given in Table 8-7. Theincrement
instruction adds 1 to the value stored in a register or memory word. One
common characteristic of the increment operations when executedin processor
registers is thata binary number of all 1’s when incremented produces a result
of all V's. The decrement instruction subtracts 1 from a value storedin aregister
or memory word. A number with all 0's, when decremented, produces a
number with all 1’s.

Theadd, subtract, multiply, and divide instructions may be available for
different types of data. The data type assumed to be in processor registers
during the execution of these arithmetic operations is included in the definition
of the operation code. An arithmetic instruction may specify fixed-point or
floating-point data, binary or decimal data, single-precision or double-preci-
sion data. The various data types are presented in Chap. 3.

Itis not uncommon to find computers with three or more add instruc-

TABLE 8-7 Typical Arithmetic Instructions

Name ‘Mnemonic
Increment INC
Decrement DEC
Add ADD
Subtract, SUB
Multiply MUL
Divide DIV
‘Add with carry ADDC
‘Subtract with borrow ‘SUBB

Negate (2's complement) NEG
