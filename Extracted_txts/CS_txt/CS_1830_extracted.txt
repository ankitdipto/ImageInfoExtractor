9.4 Paging 301

logical

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

address [74 _prsical
pid] p | d i fd
sears | :
pid |p
Page table

Figure 9.15 Inverted page table.

address-space identifier ensures the mapping of a logical page for a particular
Process to the corresponding physical page frame. Examples of systems using
inverted page tables include the 64-bit UltraSPARC and PowerPC.

To illustrate this method, we describe a simplified version of the implemen-
tation of the inverted page table used in the IBM RT. Each virtual address in the
system consists of a triple

<process-id, page-number, offset>.

Each inverted page-table entry is a pair <process-id, page-number> where the
process-id assumes the role of the address-space identifier. When a memory
reference occurs, part of the virtual address, consisting of <process-id, page-
number>, is presented to the memory subsystem. The inverted page table
is then searched for a match. If a match is found—say, at entry i—then the
physical address <i, offset> is generated. If no match is found, then an illegal
address access has been attempted.

Although this scheme decreases the amount of memory needed to store
each page table, it increases the amount of time needed to search the table when
a page reference occurs. Because the inverted page table is sorted by a physical
address, but lookups occur on virtual addresses, the whole table might need to
be searched for a match. This search would take far too long. To alleviate this
problem, we use a hash table as described in Section 9.4.4.2 to limit the search
to one—or at most a few—page-table entries. Of course, each access to the
hash table adds a memory reference to the procedure, so one virtual-memory
