312 Chapter9 Memory Management

in memory or on disk. If the table is on disk, the operating system can use
the other 31 bits to specify the disk location of the table; the table then can be
brought into memory on demand.

9.7 = Summary

Memory-management algorithms for multiprogrammed operating systems
range from the simple single-user system approach to paged segmentation. The
greatest determinant of the method used in a particular system is the hard-
ware provided. Every memory address generated by the CPU must be checked
for legality and possibly mapped to a physical address. The checking cannot
be implemented (efficiently) in software. Hence, we are constrained by the
hardware available.

The memory-management algorithms discussed (contiguous allocation,
paging, segmentation, and combinations of paging and segmentation) differ
in many aspects. In comparing different memory-management strategies, you
should use the following considerations:

¢ Hardware support: A simple base register or a pair of base and limit reg-
isters is sufficient for the single- and multiple-partition schemes, whereas
paging and segmentation need mapping tables to define the address map.

© Performance: As the memory-management algorithm becomes more com-
plex, the time required to map a logical address to a physical address
increases. For the simple systems, we need only to compare or add to the
logical address— operations that are fast. Paging and segmentation can be
as fast if the table is implemented in fast registers. If the table is in memory,
however, user memory accesses can be degraded substantially. A TLB can
reduce the performance degradation to an acceptable level.

¢ Fragmentation: A multiprogrammed system will generally perform more
efficiently if it has a higher level of multiprogramming. For a given
set of processes, we can increase the multiprogramming level only by
packing more processes into memory. To accomplish this task, we must
reduce memory waste or fragmentation. Systems with fixed-sized allo-
cation units, such as the single-partition scheme and paging, suffer from
internal fragmentation. Systems with variable-sized allocation units, such
as the multiple-partition scheme and segmentation, suffer from external
fragmentation.

© Relocation: One solution to the external-fragmentation problem is com-
paction. Compaction involves shifting a program in memory without
the program noticing the change. This consideration requires that logical
addresses be relocated dynamically, at execution time. If addresses are
relocated only at load time, we cannot compact storage.
