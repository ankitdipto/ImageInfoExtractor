424 Chapter 12 File-System Implementation

are allocated and deallocated. The commercial Veritas File System uses extents
to optimize performance. It is a high-performance replacement for the standard
UFS.

12.4.2 Linked Allocation

Linked allocation solves all problems of contiguous allocation. With linked
allocation, each file is a linked list of disk blocks; the disk blocks may be
scattered anywhere on the disk. The directory contains a pointer to the first
and last blocks of the file. For example, a file of five blocks might start at block
9, continue at block 16, then block 1, block 10, and finally block 25 (Figure 12.6).
Each block contains a pointer to the next block. These pointers are not made
available to the user. Thus, if each block is 512 bytes, and a disk address (the
pointer) requires 4 bytes, then the user sees blocks of 508 bytes.

To create a new file, we simply create a new entry in the directory. With
linked allocation, each directory entry has a pointer to the first disk block of
the file. This pointer is initialized to nil (the end-of-list pointer value) to signify
an empty file. The size field is also set to 0. A write to the file causes a free
block to be found via the free-space-management system, and this new block
is then written to, and is linked to the end of the file. To read a file, we simply
read blocks by following the pointers from block to block. There is no external
fragmentation with linked allocation, and any free block on the free-space list

directory

 

 

file start end

 

 

 

 

 

 

 

 

0 1 2 3 jeep 9 25.
4| 7|
8| 10(25) 11

 

 

42Lyi3zL]1 15)

 

 

 

 

20[_j21(_f22[_]23|

 

 

24[_] 254 26[_} 27|

 

 

 

 

 

 

 

 

 

 

28(_]29[_]30[_]31

 

Figure 12.6 Linked allocation of disk space.
