300

Chapter 10. Logical Reasoning Systems

 

O(n)time on an n-element KB. STORE takes O( 1) time to add a conjunct to the KB, but ifwe want
to ensure that no duplicates are added, then STORE is also O(n). This is impractical if one wants
to do serious inference.

Table-based indexing

A better approach is to implement the knowledge base as a hash table.' If we only had to deal
with ground literal sentences* we could implement STORE so that when given P it stores the value
true in the hash table under the key P, and when given —P, it stores false under the key P. Then
FETCH could do a simple lookup in the hash table, and both FETCH and STORE would be O(1).

There are two problems with this approach: it does not deal with complex sentences
other than negated sentences, and it does not deal with variables within sentences. So FETCH
would not be able to find "an implication with P as consequent," such as might be required by
a backward-chaining algorithm; nor could it find Brother(Richard, John) when given a query
dx Brother(Richard, x).

The solution is to make STORE maintain a more complex table. We assume the sentences
are all converted to anormal form. (We use implicative normal form.) The keys to the table will
be predicate symbols, and the value stored under each key will have four components:

+ A list of positive literals for that predicate symbol.

+ A list of negative literals

+ A list of sentences in which the predicate is in the conclusion.
+ A list of sentences in which the predicate is in the premise

So, given the knowledge base:

Brother(Richard, John)

Brother(Ted, Jack) A Brother(Jack, Bobbie)
—=Brother(Ann, Sam)

Brother(x,y) = Male(x)

Brother(x,y) A Male(y) = Brother(v, x)
Male(JackyA Male(Ted)A ... A >Male(Ann)A ...

the table for the knowledge base would be as shown in Figure 10.1.
Now suppose that we ask the query

ASK(KB, Brother(Jack, Ted))

and that ASK uses backward chaining (see Section 9.4). It would first call FETCH to find a positive
literal matching the query. Because that fails, FETCH is called to find an implication with Brother
as the consequent. The query matches the consequent, the antecedent becomes the new goal after
the appropriate substitution is applied, and the procedure begins again.

"A hash table is a data structure for storing and retrieving information indexed by fixed keys. For practical purposes,
a hash table can be considered to have constant storage and retrieval times, even when the table contains a vary large
number of items

2 Remember that a ground literal contains no variables. It is either an atomic sentence such as Brother(Richard.John)
or a negated atomic sentence such as =Brother(Ann, Victoria).
