462 © CHAPTER TWELVE Memory Organization

locality of reference

If unwanted words have to be deleted and new words inserted one at a
time, there is a need for a special register to distinguish between active and
inactive words. This register, sometimes called a tag register, would have as
many bits as there are words in the memory. For every active word stored in
memory, the corresponding bit in the tag register is set to L A word is deleted
from memory by clearing its tag bit to 0. Words are stored in memory by
scanning the tag register until the first 0 bit is encountered. This gives the first
available inactive word and a position for writing a new word. After the new
word is stored in memory it is made active by setting its tag bit to 1. An
unwanted word when deleted from memory can be cleared to all 0's if this
value is used to specify an empty location. Moreover, the words that have a
tag bit of 0 must be masked (together with the K; bits) with the argument word
so that only active words are compared.

12-5 Cache Memory

Analysis of a large number of typical programs has shown that the references
to memory at any given interval of time tend to be confined within a few
localized areas in memory. This phenomenon is known as the property of
locality ofreerence. The reason for this property may be understood considering
that a typical computer program flows in a straight-line fashion with program
loops and subroutine calls encountered frequently. When a program loop is
executed, the CPU repeatedly refers to the set of instructions in memory that
constitute the loop. Every time a given subroutine is called, its set of instruc-
tions are fetched from memory. Thus loops and subroutines tend to localize
thereferences to memory for fetching instructions. Toa lesser degree, memory
references to data also tend to be localized. Table-lookup procedures repeat-
edly refer to that portion in memory where the table is stored, Iterative proce-
dures refer to common memory locations and array of numbers are confined
within a local portion of memory. The result of all these observations is the
locality of reference property, which states that over a short interval of time,
the addresses generated by a typical program refer to a few localized areas of
memory repeatedly, while the remainder of memory is accessed relatively
infrequently.

If the active portions of the program and data are placed in a fast small
memory, the average memory access time can be reduced, thus reducing the
total execution time of the program. Such a fast small memory is referred to
as acache memory. Itis placed between the CPU and main memory as illustrated
in Fig. 12-1. The cache memory access time is less than the access time of main
memory by afactor of5 to 10. The cacheis the fastest component in the memory
hierarchy and approaches the speed of CPU components.

‘The fundamental idea of cache organization is that by keeping the most
frequently accessed instructions and data in the fast cache memory, the aver-
