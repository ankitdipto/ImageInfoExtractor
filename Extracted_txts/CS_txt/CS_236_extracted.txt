Perfect Decisions in Two-Person Games

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

‘MAX (X)
x x T [x
MIN(0) Xi Xx x
x x x
=
SS
x0) x] fo] [x
MAX (X) 0!
ofx] [x]! at
MIN(O) x
xJo[x] (Xfolx| (kfox oa
TERMINAL O|xX} |O]O|x xX
0} X{X!0) [X}0.0]
Utility -l 0 +1

 

 

Figure 51 A (partial) search tree for the game of Tic-Tac-Toe. The top node is the initial
state, and MAX moves first, placing an x in some square. We show part of the search tree, giving
alternating moves by MIN (0) and MAX, until we eventually reach terminal states, which can be
assigned utilities according to the rules of the game.

 

 

MAX

MIN

 

 

 

 

Figure 52 A two-ply game iree as generated by the minimax algorithm. The A nodes ars
moves by MAX and the V nodes aremoves by MIN. The terminal nodes show the utility valuefor
MAX computed by the utility funetion (i.e., by the rules of the game), whereas the utilities of the
other nodes are computed by the minimax algorithm from the utilities oftheir successors. MAX'S
best move is 4\, and MIN’s best reply is .4\\

 

 
