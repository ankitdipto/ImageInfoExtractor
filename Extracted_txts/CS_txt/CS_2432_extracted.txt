50

Chapter 3 Growth of Functions

there is only a single anonymous function (a function of i). This expression is thus
not the same as O(1) + O(2) +--+. + O(n), which doesn’t really have a clean
interpretation.

In some cases, asymptotic notation appears on the left-hand side of an equation,
as in

2n? + O(n) = O(n?) .

We interpret such equations using the following rule: No matter how the anony-
mous functions are chosen on the left of the equal sign, there is a way to choose
the anonymous functions on the right of the equal sign to make the equation valid.
Thus, our example means that for any function f(n) € O(n), there is some func-
tion g(n) € O(n?) such that 2n? + f(n) = g(n) for all n. In other words, the
right-hand side of an equation provides a coarser level of detail than the left-hand
side.
We can chain together a number of such relationships, as in

2n? + @(n)
= O(n’).

We can interpret each equation separately by the rules above. The first equa-
tion says that there is some function f(n) € ©(n) such that 2n? + 3n +1 =
2n? + f(n) for all n. The second equation says that for any function g(n) € O(n)
(such as the f(n) just mentioned), there is some function h(n) € @(n?) such
that 2n? + g(n) = h(n) for all n. Note that this interpretation implies that
2n? + 3n + 1 = O(n’), which is what the chaining of equations intuitively gives
us.

2n? +3n+1

o-notation

The asymptotic upper bound provided by O-notation may or may not be asymp-
totically tight. The bound 2n? = O(n) is asymptotically tight, but the bound
2n = O(n?) is not. We use 0-notation to denote an upper bound that is not asymp-
totically tight. We formally define o(g(n)) (“little-oh of g of n”) as the set

o(g(n)) = {f(n) : for any positive constant c > 0, there exists a constant
No > Osuch that 0 < f(n) <cg(n) for alln > no} .

For example, 21 = 0(n?), but 2n? 4 0(n?).

The definitions of O-notation and 0-notation are similar. The main difference
is that in f(n) = O(g(n)), the bound 0 < f(n) < cg(n) holds for some con-
stant c > 0, but in f(m) = o(g(n)), the bound 0 < f(n) < cg(n) holds for all
constants c > 0. Intuitively, in o-notation, the function f(n) becomes insignificant
relative to g(n) as n approaches infinity; that is,
