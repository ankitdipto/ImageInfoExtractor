82

Chapter 4 Divide-and-Conquer

which corresponds to equation (4.14). Altogether, we add or subtract n/2 x n/2
matrices eight times in step 4, and so this step indeed takes @(n”) time.

Thus, we see that Strassen’s algorithm, comprising steps 1-4, produces the cor-
rect matrix product and that recurrence (4.18) characterizes its running time. Since
we shall see in Section 4.5 that this recurrence has the solution T(n) = @(n'7),
Strassen’s method is asymptotically faster than the straightforward SQUARE-
MATRIX-MULTIPLY procedure. The notes at the end of this chapter discuss some
of the practical aspects of Strassen’s algorithm.

Exercises

Note: Although Exercises 4.2-3, 4.2-4, and 4.2-5 are about variants on Strassen’s
algorithm, you should read Section 4.5 before trying to solve them.

4.2-1
Use Strassen’s algorithm to compute the matrix product

1 3\/6 8
7 5)\4 2)°
Show your work.

4.2-2
Write pseudocode for Strassen’s algorithm.

4.2-3
How would you modify Strassen’s algorithm to multiply n xn matrices in which n
is not an exact power of 2? Show that the resulting algorithm runs in time O(n'27).

4.2-4

What is the largest k such that if you can multiply 3 x 3 matrices using & multi-
plications (not assuming commutativity of multiplication), then you can multiply
nxn matrices in time o(n'£7)? What would the running time of this algorithm be?

4.2-5

V. Pan has discovered a way of multiplying 68 x 68 matrices using 132,464 mul-
tiplications, a way of multiplying 70 x 70 matrices using 143,640 multiplications,
and a way of multiplying 72 x 72 matrices using 155,424 multiplications. Which
method yields the best asymptotic running time when used in a divide-and-conquer
matrix-multiplication algorithm? How does it compare to Strassen’s algorithm?
