116

Chapter 5 Probabilistic Analy

 

's and Randomized Algorithms

 

in procedure HIRE-ASSISTANT. In order to perform a probabilistic analysis, we
must use knowledge of, or make assumptions about, the distribution of the inputs.
Then we analyze our algorithm, computing an average-case running time, where
we take the average over the distribution of the possible inputs. Thus we are, in
effect, averaging the running time over all possible inputs. When reporting such a
running time, we will refer to it as the average-case running time.

We must be very careful in deciding on the distribution of inputs. For some
problems, we may reasonably assume something about the set of all possible in-
puts, and then we can use probabilistic analysis as a technique for designing an
efficient algorithm and as a means for gaining insight into a problem. For other
problems, we cannot describe a reasonable input distribution, and in these cases
we cannot use probabilistic analy:

For the hiring problem, we can assume that the applicants come in a random
order. What does that mean for this problem? We assume that we can compare
any two candidates and decide which one is better qualified; that is, there is a
total order on the candidates. (See Appendix B for the definition of a total or-
der.) Thus, we can rank each candidate with a unique number from | through n,
using rank(i) to denote the rank of applicant i, and adopt the convention that a
higher rank corresponds to a better qualified applicant. The ordered list (rank(1),
rank(2),...,rank(n)) is a permutation of the list (1,2,...,). Saying that the
applicants come in a random order is equivalent to saying that this list of ranks is
equally likely to be any one of the n! permutations of the numbers | through n.
Alternatively, we say that the ranks form a uniform random permutation; that is,
each of the possible ! permutations appears with equal probability.

Section 5.2 contains a probabilistic analysis of the hiring problem.

 

Randomized algorithms

In order to use probabilistic analysis, we need to know something about the distri-
bution of the inputs. In many cases, we know very little about the input distribution.
Even if we do know something about the distribution, we may not be able to model
this knowledge computationally. Yet we often can use probability and randomness
as a tool for algorithm design and analysis, by making the behavior of part of the
algorithm random.

In the hiring problem, it may seem as if the candidates are being presented to us
in a random order, but we have no way of knowing whether or not they really are.
Thus, in order to develop a randomized algorithm for the hiring problem, we must
have greater control over the order in which we interview the candidates. We will,
therefore, change the model slightly. We say that the employment agency has n
candidates, and they send us a list of the candidates in advance. On each day, we
choose, randomly, which candidate to interview. Although we know nothing about
