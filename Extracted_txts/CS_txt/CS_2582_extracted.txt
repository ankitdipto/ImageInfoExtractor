7.1 Description of quicksort 171

Combine: Because the subarrays are already sorted, no work is needed to combine
them: the entire array A[p . . r] is now sorted.

The following procedure implements quicksort:

QuIcKsorT(A, p,r)

ifp<r
q = PARTITION(A, pr)
Quicksort(A, p,q — 1)
Quicksort(4,q + 1,7)

RwNe

To sort an entire array A, the initial call is QUICKSORT(A, 1, A. length).

Partitioning the array

The key to the algorithm is the PARTITION procedure, which rearranges the subar-
ray A[p..r] in place.

PARTITION(A, pr)
1 x = Afr]

2 i=p-l

3 for j = ptor—1

4 if A[j] <x

5 i=it+l

6 exchange A[j] with A[j]
7 exchange Afi + 1] with A[r]

8 returni +1

Figure 7.1 shows how PARTITION works on an 8-element array. PARTITION
always selects an element x = A[r] as a pivot element around which to partition the
subarray A[p ..r]. As the procedure runs, it partitions the array into four (possibly
empty) regions. At the start of each iteration of the for loop in lines 3-6, the regions
satisfy certain properties, shown in Figure 7.2. We state these properties as a loop
invariant:

At the beginning of each iteration of the loop of lines 3-6, for any array
index k,

1. If p <k <i, then A[k] <x.

2. fi +1<k < j —1,then A[k] > x.

3. Ifk =r, then A[k] = x.
