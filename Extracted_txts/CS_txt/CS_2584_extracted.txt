7.1 Description of quicksort 173

 

 

 

 

 

 

 

 

 

 

 

 

Sx >x unrestricted

Figure 7.2 The four regions maintained by the procedure PARTITION on a subarray A[p ..r]. The
values in A[p . .i] are all less than or equal to x, the values in A[i +1.. j — 1] are all greater than x,
and A[r] = x. The subarray A[j ..r — 1] can take on any values.

 

 

Initialization: Prior to the first iteration of the loop, i = p—1 and j = p. Be-
cause no values lie between p and i and no values lie between i + 1 and j — 1,
the first two conditions of the loop invariant are trivially satisfied. The assign-
ment in line | satisfies the third condition.

Maintenance: As Figure 7.3 shows, we consider two cases, depending on the
outcome of the test in line 4. Figure 7.3(a) shows what happens when A[j] > x;
the only action in the loop is to increment j. After j is incremented, condition 2
holds for A[j — 1] and all other entries remain unchanged. Figure 7.3(b) shows
what happens when A[j] < x; the loop increments i, swaps A[i] and A[/],
and then increments j. Because of the swap, we now have that A[i] < x, and
condition | is satisfied. Similarly, we also have that A[j — 1] > x, since the
item that was swapped into A[j — 1] is, by the loop invariant, greater than x.

Termination: At termination, j = 1. Therefore, every entry in the array is in one
of the three sets described by the invariant, and we have partitioned the values
in the array into three sets: those less than or equal to x, those greater than x,
and a singleton set containing x.

The final two lines of PARTITION finish up by swapping the pivot element with
the leftmost element greater than x, thereby moving the pivot into its correct place
in the partitioned array, and then returning the pivot’s new index. The output of
PARTITION now satisfies the specifications given for the divide step. In fact, it
satisfies a slightly stronger condition: after line 2 of QUICKSORT, A[g] is strictly
less than every element of A[q + 1..7r].

The running time of PARTITION on the subarray A[p..r] is O(n), where
n=r-— p+ 1 (see Exercise 7.1-3).

Exercises

71-1
Using Figure 7.1 as a model, illustrate the operation of PARTITION on the array
A= (13, 19,9,5,12,8,7,4,21,2,6, 11).
