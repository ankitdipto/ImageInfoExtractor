9.3 Selection in worst-case linear time 221

 

 

Figure 9.1 Analysis of the algorithm SELECT. The n elements are represented by small circles,
and each group of 5 elements occupies a column, The medians of the groups are whitened, and the
median-of-medians x is labeled. (When finding the median of an even number of elements, we use
the lower median.) Arrows go from larger elements to smaller, from which we can see that 3 out
of every full group of 5 elements to the right of x are greater than x, and 3 out of every group of 5
elements to the left of x are less than x. The elements known to be greater than x appear ona shaded
background.

step 2 are greater than or equal to the median-of-medians x.' Thus, at least half
of the [n/5] groups contribute at least 3 elements that are greater than x, except
for the one group that has fewer than 5 elements if 5 does not divide n exactly, and
the one group containing x itself. Discounting these two groups, it follows that the
number of elements greater than x is at least

lyn 3n
a([5 ll 2) = 10 6.
Similarly, at least 31/10 â€” 6 elements are less than x. Thus, in the worst case,
step 5 calls SELECT recursively on at most 7n/10 + 6 elements.

We can now develop a recurrence for the worst-case running time T(m) of the
algorithm SELECT. Steps 1, 2, and 4 take O(n) time. (Step 2 consists of O(n)
calls of insertion sort on sets of size O(1).) Step 3 takes time T([n/5]), and step 5
takes time at most T(7n/10 + 6), assuming that T is monotonically increasing.
We make the assumption, which seems unmotivated at first, that any input of fewer
than 140 elements requires O(1) time; the origin of the magic constant 140 will be
clear shortly. We can therefore obtain the recurrence

 

1Because of our assumption that the numbers are distinct, all medians except x are either greater
than or less than x.
