382

Chapter 15 Dynamic Programming
rt
Ge)

Figure 15.6 A directed graph showing that the problem of finding a longest simple path in an
unweighted directed graph does not have optimal substructure. The path ¢ > r > f is a longest
simple path from q tof, but the subpath ¢ — r is not a longest simple path from q to r, nor is the
subpath r > 1 a longest simple path from r tot.

Unweighted longest simple path: Find a simple path from wu to v consisting of
the most edges. We need to include the requirement of simplicity because other-
wise we can traverse a cycle as many times as we like to create paths with an
arbitrarily large number of edges.

The unweighted shortest-path problem exhibits optimal substructure, as follows.
Suppose that u # v, so that the problem is nontrivial. Then, any path p from u
to v must contain an intermediate vertex, say w. (Note that w may be u or v.)
Thus, we can decompose the path u 2. y into subpaths w Rew Boy, Clearly, the
number of edges in p equals the number of edges in p, plus the number of edges
in p>. We claim that if p is an optimal (i-e., shortest) path from u to v, then p;
must be a shortest path from u to w. Why? We use a “cut-and-paste” argument:
if there were another path, say p, from u to w with fewer edges than p,, then we

could cut out p, and paste in p{ to produce a path u 2. w %& v with fewer edges
than p, thus contradicting p’s optimality. Symmetrically, p, must be a shortest
path from w to v. Thus, we can find a shortest path from u to v by considering
all intermediate vertices w, finding a shortest path from u to w and a shortest path
from w to v, and choosing an intermediate vertex w that yields the overall shortest
path. In Section 25.2, we use a variant of this observation of optimal substructure
to find a shortest path between every pair of vertices on a weighted, directed graph.

You might be tempted to assume that the problem of finding an unweighted
longest simple path exhibits optimal substructure as well. After all, if we decom-
pose a longest simple path w “+ v into subpaths uv 25 w 43 v, then mustn’t p;
be a longest simple path from u to w, and mustn’t p be a longest simple path
from w to v? The answer is no! Figure 15.6 supplies an example. Consider the
path g + r — f, which is a longest simple path from q to ft. Is gq > r a longest
simple path from q to r? No, for the path g + s > ft > r isa simple path
that is longer. Is r — f a longest simple path from r to t? No again, for the path
r + q— St isa simple path that is longer.
