422

Chapter 16 Greedy Algorithms

Assume that the inputs have been sorted as in equation (16.1). Compare the running
time of your solution to the running time of GREEDY-ACTIVITY-SELECTOR.

16.1-2

Suppose that instead of always selecting the first activity to finish, we instead select
the last activity to start that is compatible with all previously selected activities. De-
scribe how this approach is a greedy algorithm, and prove that it yields an optimal
solution.

16.1-3

Not just any greedy approach to the activity-selection problem produces a max-
imum-size set of mutually compatible activities. Give an example to show that
the approach of selecting the activity of least duration from among those that are
compatible with previously selected activities does not work. Do the same for
the approaches of always selecting the compatible activity that overlaps the fewest
other remaining activities and always selecting the compatible remaining activity
with the earliest start time.

16.14

Suppose that we have a set of activities to schedule among a large number of lecture
halls, where any activity can take place in any lecture hall. We wish to schedule
all the activities using as few lecture halls as possible. Give an efficient greedy
algorithm to determine which activity should use which lecture hall.

(This problem is also known as the interval-graph coloring problem. We can
create an interval graph whose vertices are the given activities and whose edges
connect incompatible activities. The smallest number of colors required to color
every vertex so that no two adjacent vertices have the same color corresponds to
finding the fewest lecture halls needed to schedule all of the given activities.)

161-5

Consider a modification to the activity-selection problem in which each activity a;
has, in addition to a start and finish time, a value v;. The objective is no longer
to maximize the number of activities scheduled, but instead to maximize the total
value of the activities scheduled. That is, we wish to choose a set A of compatible
activities such that )> a, cA Vk is maximized. Give a polynomial-time algorithm for
this problem.

  
