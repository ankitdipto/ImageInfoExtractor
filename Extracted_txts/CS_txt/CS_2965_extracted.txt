Part V_ Advanced Data Structures 483

and space cost. Problem 13-1 gives a simple example of a persistent dynamic
set.

* As in Chapter 20, several data structures allow a faster implementation of dic-
tionary operations (INSERT, DELETE, and SEARCH) for a restricted universe
of keys. By taking advantage of these restrictions, they are able to achieve bet-
ter worst-case asymptotic running times than comparison-based data structures.
Fredman and Willard introduced fusion trees [115], which were the first data
structure to allow faster dictionary operations when the universe is restricted to
integers. They showed how to implement these operations in O(lgn/Iglgn)
time. Several subsequent data structures, including exponential search trees
[16], have also given improved bounds on some or all of the dictionary opera-
tions and are mentioned in the chapter notes throughout this book.

* Dynamic graph data structures support various queries while allowing the
structure of a graph to change through operations that insert or delete vertices
or edges. Examples of the queries that they support include vertex connectivity
[166], edge connectivity, minimum spanning trees [165], biconnectivity, and
transitive closure [164].

Chapter notes throughout this book mention additional data structures.
