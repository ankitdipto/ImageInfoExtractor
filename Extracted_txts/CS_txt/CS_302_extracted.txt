Section 5.4.

Alpha-Beta Pruning 131

 

 

MAX

MIN

 

 

 

Figure 5.6 The two-ply game tree as generated by alpha-beta.

 

 

Player

Opponent

 

Player

Opponent

 

 

Figure 57 Alpha-beta pruning: the general case. Ifm is better than 7 for Player, we will never
get to n in play.

 

 

 

which case the returned value is ignored anyway). The alpha-beta search function itselfisjust a
copy of the MAX-VALUE function with extra code to remember and return the best move found.

Effectiveness of alpha-beta pruning

The effectiveness of alpha-beta depends on the ordering in which the successors are examined.
This is clear from Figure 5.6, where we could not prune A3 at all because A3, and A32 (the worst
moves from the point of view of MIN) were generated first. This suggests it might be worthwhile
to try to examine first the successors that are likely to be best

If we assume that this can be done,* then it turns out that alpha-beta only needs to examine
O(b?ynodes to pick the best move, instead of O(b“)with minimax. This means that the effective
branching factor is /b instead of b—for chess, 6 instead of 35. Put another way, this means

3 Obviously, it cannot be done perfectly, otherwise the ordering function could be used to play a perfect game!
