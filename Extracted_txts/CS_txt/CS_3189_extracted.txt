552

Chapter 18. Learning from Observations

 

‘GENERALIZATION
HIERARCHY

3. We run out of examples with several hypotheses remaining in the version space. This
means the version space represents a disjunction of hypotheses. For any new example,
if all the disjuncts agree, then we can return their classification of the example. If they
disagree, one possibility is to take the majority vote.

We leave as an exercise the application of the VERSION-SPACE-LEARNING algorithm to the
restaurant data.

Discussion

There are two principal drawbacks to the version-space approach:

+ If the domain contains noise or insufficient attributes for exact classification, the version
space will always collapse.

+ Ifwe allow unlimited disjunction in the hypothesis space, the S-set will always contain a
single most-specific hypothesis, namely, the disjunction of the descriptions of the positive
examples seen to date. Similarly, the G-set will contain just the negation of the disjunction
of the descriptions of the negative examples.

To date, no completely successful solution has been found for the problem of noise. The problem
of disjunction can be addressed by allowing limited forms of disjunction or by including a gen-
eralization hierarchy of more general predicates. For example, instead of using the disjunction
WaitEstimate(x,30-60) V WaitEstimate(x, >60), we might use the single literal Long Wait(x). The
set of generalization and specialization operations can be easily extended to handle this

The pure version space algorithm was first applied in the Meta-DENDRAL system, which
was designed to learn rules for predicting how molecules would break into pieces in a mass
spectrometer (Buchanan and Mitchell, 1978). Meta-DENDRAL was able to generate rules that
were sufficiently novel to warrant publication in ajournal of analytical chemistry—the first real
scientific knowledge generated by a computer program. It was also used in the elegant LEX
system (Mitchell ef al., 1983), which was able to leam to solve symbolic integration problems
by studying its own successes and failures. Although version space methods are probably not
practical in most real-world learning problems, mainly because of noise, they provide a good
deal of insight into the logical structure of hypothesis space.

18.6 Wuy LEARNING WORKS: COMPUTATIONAL LEARNING THEORY

Leaming means behaving better as a result of experience. We have shown several algorithms for
inductive learning, and explained how they fit into an agent. The main unanswered question was
posed in Section 18.2: how can one possibly know that one's learning algorithm has produced a
theory that will correctly predict the future? In terms of the definition of inductive leaming, how
do we know that the hypothesis / is close to the target function fif we don't know what f is?
These questions have been pondered for several centuries, but unless we find some answers,
machine learning will, at best, be puzzled by its own success. Fortunately, within the last decade,

 
