Chapter 3. Solving Problems by Searching

 

algorithms described in this chapter and the next. The 8-puzzle and its larger cousin. the 15-
puzzle, are the standard test problems for new search algorithms in Al.

The 8-queens problem

The goal of the 8-queens problem is to place eight queens on a chessboard such that no queen
attacks any other. (A queen attacks any piece in the same row, column or diagonal.) Figure 3.5
shows an attempted solution that fails: the queen in the rightmost column is attacked by the queen
at top left.

 

 

 

 

 

 

 

 

Figure 35 Almost a solution to the 8-queens problem. (Solution is left as an exercise.)

 

 

 

Although efficient special-purpose algorithms exist for this problem and the whole n-
queens family, it remains an interesting test problem for search algorithms. There are two main
kinds of formulation. The incremental formulation involves placing queens one by one, whereas
the complete-state formulation starts with all 8 queens on the board and moves them around. In
either case, the path cost is of no interest because only the final state counts; algorithms are thus
compared only on search cost. Thus, we have the following goal test and path cost:

0 Goal test: 8 queens on board, none attacked.

0 Path cost: zero.
There are also different possible states and operators. Consider the following simple-minded
formulation:

States: any arrangement of 0 to 8 queens on board.

~ Operators: add a queen to any square.

In this formulation, we have 648 possible sequences to investigate. A more sensible choice would
use the fact that placing a queen where it is already attacked cannot work, because subsequent
placings of other queens will not undo the attack. So we might try the following:
