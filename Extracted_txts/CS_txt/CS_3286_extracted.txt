Section 21.4.

Inductive Logic Programming 639

 

INVERSE
RESOLUTION

In the rest of this chapter, we will study the two principal approaches to ILP. The first
uses techniques based on inverting a resolution proof, and the second uses a generalization of
decision-tree methods

Inverse resolution

Inverse resolution is based on the observation that if the example Classifications follow from
Background A Hypothesis A Descriptions, then one must be able to prove this fact by resolution
(because resolution is complete). If we can "run the proof backwards," then we can find a
Hypothesis such that the proof goes through. The key, then, is to find a way to invert the
resolution process so that we can run the proof backwards.

Generating inverse proofs

The backward proof process consists of individual backward steps. An ordinary resolution step
takes two clauses C| and C and resolves them to produce the resolvent C. An inverse resolution
step takes a resolvent C and produces two clauses C| and C2, such that C is the result ofresolving
C\ and C); or it takes C and C\ and produces a suitable C2.

The early steps in an inverse resolution process are shown in Figure 21.6, where we
focus on the positive example Grandparent(George, Anne). The process begins at the end of
the proof, that is, at the contradiction, and works backwards. The negated goal clause is
AGrandparent(George, Anne), which is Grandparent(George, Anne) => False in implicative
normal form. The first inverse step takes this and the contradictory clause True = False, and
generates Grandparent(George, Anne). The next step takes this clause and the known clause
Parent(Elizabeth, Anne), and generates the clause

Parent(Elizabeth, y) => Grandparent(Georgey)

With one further step, the inverse resolution process will generate the correct hypothesis
Clearly, inverse resolution involves a search. Each inverse resolution step is nondeter-

ministic, because for any C and Cj, there can be several or even an infinite number of clauses

C> that satisfy the requirement that when resolved with C\ it generates C. For example, in-

 

 

 

 

 

 

Parent(Elicabethy) > Grandpareni( George.y) True > Parent(Elizabeth,Anne)
â„¢ {y/Anne}

 

 

 

 

 

 

 

| [ Grandparent(GeorgeAnne) > False

â€”

True > False

 

 

 

 

 

 

 

Figure 21.6 Early steps in an inverse resolution process. The shaded clauses are generated by
inverse resolution steps.

 

 

 

 
