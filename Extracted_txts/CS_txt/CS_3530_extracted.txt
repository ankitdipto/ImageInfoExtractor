12 couarer one Digital Logic Circuits

adjacent squares

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

: .
(testes (tees
~
*
4
i)
3

(@)Fourvariable map

Figure 1-7. Mapsfor two, three, and four-variable functions

numbers are assigned in an orderly arrangement such that adjacent squares
represent minterms that differ by only one variable. The variable names are
listed across both sides of the diagonal line in the comer of the map. The 0's
and 1’s marked along each row and each column designate the value of the
variables. Each variable under brackets contains half of the squares in the map
where that variable appears unprimed. The variable appears with a prime
(complemented) in the remaining half of the squares.

The minterm represented by a square is determined from the binary
assignments of the variables along the left and top edges in the map. For
example, minterm 5 in the three-variable map is 101 in binary, which may be
obtained from the 1 in the second row concatenated with the 01 of the second
column. This minterm represents a value for the binary variables A, B, and C,
with A and C being unprimed and B being primed (ie., AB’C). On the other
hand, minterm 5 in the four-variable map represents a minterm for four
variables. The binary number contains the four bits 0101, and the correspond-
ing term it represents is A’BC’D.

Minterms of adjacent squares in the map are identical except for one
variable, which appears complemented in one square and uncomplemented
in the adjacent square. According to this definition of adjacency, the squares
at the extreme ends of the same horizontal row are also to be considered
