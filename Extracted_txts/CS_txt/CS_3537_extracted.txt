514

Chapter 19 Fibonacci Heaps

H.min H.min

? y
« @O® ke ® 8090899
° } ®) ©

0123 0123
AMT AZ Zi

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

© 009000 2 @ tated tal +4

©

 

 

 

A Z A

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

VX,

ort 0"O@GOG00—@
: 3°

VX,

  

®) °$ ee

 

 

2
Z

>
R=

 

 

 

 

 

 

 

 

 

 

 

 

 

 

(h)

 

Figure 19.4 The action of FiB-HEAP-EXTRACT-MIN. (a) A Fibonacci heap H. (b) The situa-
tion after removing the minimum node z from the root list and adding its children to the root list.
(c)(e) The array A and the trees after each of the first three iterations of the for loop of lines 4-14 of
the procedure CONSOLIDATE. The procedure processes the root list by starting at the node pointed
to by H.min and following right pointers. Each part shows the values of w and x at the end of an
iteration. (f)-(h) The next iteration of the for loop, with the values of w and x shown at the end of
each iteration of the while loop of lines 7-13. Part (f) shows the situation after the first time through
the while loop. The node with key 23 has been linked to the node with key 7, which x now points to.
In part (g), the node with key 17 has been linked to the node with key 7, which x still points to. In
part (h), the node with key 24 has been linked to the node with key 7. Since no node was previously
pointed to by A[3], at the end of the for loop iteration, A[3] is set to point to the root of the resulting
tree.
