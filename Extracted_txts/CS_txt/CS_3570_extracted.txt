20.2. A recursive structure S41

the summary structures altogether. The following procedure takes a proto-vEB
structure V and a value x, and it returns a bit indicating whether x is in the dynamic
set held by V.

PROTO-VEB-MEMBER(V, x)

1 ifVu==2

2 return V.A[x]

3 else return PROTO-VEB-MEMBER (V. cluster[high(x)], low(x))

The PROTO-vVEB-MEMBER procedure works as follows. Line 1 tests whether
we are in a base case, where V is a proto-vEB(2) structure. Line 2 handles the
base case, simply returning the appropriate bit of array A. Line 3 deals with the
recursive case, “drilling down” into the appropriate smaller proto-vEB structure.
The value high(x) says which proto-vEB(./u) structure we visit, and low(x) de-
termines which element within that proto-v EB(./u) structure we are querying.

Let’s see what happens when we call PROTO-VEB-MEMBER(V,6) on the
proto-vEB(16) structure in Figure 20.4. Since high(6) = 1 when u = 16, we
recurse into the proto-vEB(4) structure in the upper right, and we ask about ele-
ment low(6) = 2 of that structure. In this recursive call, 1 = 4, and so we recurse
again. With u = 4, we have high(2) = 1 and low(2) = 0, and so we ask about
element 0 of the proto-vEB(2) structure in the upper right. This recursive call turns
out to be a base case, and so it returns A[0] = 0 back up through the chain of re-
cursive calls. Thus, we get the result that PROTO-VEB-MEMBER(V, 6) returns 0,
indicating that 6 is not in the set.

To determine the running time of PROTO-vVEB-MEMBER, let T(u) denote
its running time on a proto-vEB(u) structure. Each recursive call takes con-
stant time, not including the time taken by the recursive calls that it makes.
When PROTO-vEB-MEMBER makes a recursive call, it makes a call on a
proto-v EB(,/u) structure. Thus, we can characterize the running time by the recur-
rence T(u) = T(/u) + O(1), which we have already seen as recurrence (20.2).
Its solution is T(u) = O(1g1gu), and so we conclude that PROTO-VEB-MEMBER
runs in time O(lg 1g u).

Finding the minimum element

Now we examine how to perform the MINIMUM operation. The procedure
PROTO-VEB-MINIMUM(V) returns the minimum element in the proto-vEB struc-
ture V, or NIL if V represents an empty set.
