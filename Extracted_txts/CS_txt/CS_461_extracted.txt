 

33

Computational Geometry

Computational geometry is the branch of computer science that studies algorithms
for solving geometric problems. In modern engineering and mathematics, com-
putational geometry has applications in such diverse fields as computer graphics,
robotics, VLSI design, computer-aided design, molecular modeling, metallurgy,
manufacturing, textile layout, forestry, and statistics. The input to a computational-
geometry problem is typically a description of a set of geometric objects, such as
a set of points, a set of line segments, or the vertices of a polygon in counterclock-
wise order. The output is often a response to a query about the objects, such as
whether any of the lines intersect, or perhaps a new geometric object, such as the
convex hull (smallest enclosing convex polygon) of the set of points.

In this chapter, we look at a few computational-geometry algorithms in two
dimensions, that is, in the plane. We represent each input object by a set of
points {p1, P2, P3..-.}, where each pj = (xj, yj) and x;,y; € R. For exam-
ple, we represent an n-vertex polygon P by a sequence (po, P1. P2. ---. Pn—1)
of its vertices in order of their appearance on the boundary of P. Computational
geometry can also apply to three dimensions, and even higher-dimensional spaces,
but such problems and their solutions can be very difficult to visualize. Even in
two dimensions, however, we can see a good sample of computational-geometry
techniques.

Section 33.1 shows how to answer basic questions about line segments effi-
ciently and accurately: whether one segment is clockwise or counterclockwise
from another that shares an endpoint, which way we turn when traversing two
adjoining line segments, and whether two line segments intersect. Section 33.2
presents a technique called “sweeping” that we use to develop an O(n lg n)-time
algorithm for determining whether a set of 7 line segments contains any inter-
sections. Section 33.3 gives two “rotational-sweep” algorithms that compute the
convex hull (smallest enclosing convex polygon) of a set of n points: Graham’s
scan, which runs in time O(n lg), and Jarvis’s march, which takes O(n/) time,
where /i is the number of vertices of the convex hull. Finally, Section 33.4 gives
