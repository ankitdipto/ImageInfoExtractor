1028

Chapter 33 Computational Geometry

Exercises

33.2-1
Show that a set of 7 line segments may contain @(n) intersections.

33.2-2

Given two segments a and b that are comparable at x, show how to determine
in O(1) time which of a =x b or b =x a holds. Assume that neither segment
is vertical. (Hint: If a and b do not intersect, you can just use cross products.
If a and b intersect—which you can of course determine using only cross prod-
ucts—you can still use only addition, subtraction, and multiplication, avoiding
division. Of course, in the application of the >, relation used here, if a and b
intersect, we can just stop and declare that we have found an intersection.)

33.2-3

Professor Mason suggests that we modify ANY-SEGMENTS-INTERSECT so that
instead of returning upon finding an intersection, it prints the segments that inter-
sect and continues on to the next iteration of the for loop. The professor calls the
resulting procedure PRINT-INTERSECTING-SEGMENTS and claims that it prints
all intersections, from left to right, as they occur in the set of line segments. Pro-
fessor Dixon disagrees, claiming that Professor Mason’s idea is incorrect. Which
professor is right? Will PRINT-INTERSECTING-SEGMENTS always find the left-
most intersection first? Will it always find all the intersections?

33.24
Give an O(n lgn)-time algorithm to determine whether an n-vertex polygon is
simple.

33.2-5
Give an O(n lgn)-time algorithm to determine whether two simple polygons with
a total of n vertices intersect.

33.2-6

A disk consists of a circle plus its interior and is represented by its center point and
radius. Two disks intersect if they have any point in common. Give an O(n lgn)-
time algorithm to determine whether any two disks in a set of intersect.

33.2-7
Given a set of n line segments containing a total of k intersections, show how to
output all & intersections in O((n + k)lgn) time.
