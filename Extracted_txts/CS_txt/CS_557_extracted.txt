Chapter 1. Tntroduction

 

usP

At IBM, Nathaniel Rochester and his colleagues produced some of the first AI programs.
Herbert Gelernter (1959) constructed the Geometry Theorem Prover. Like the Logic Theorist,
it proved theorems using explicitly represented axioms. Gelernter soon found that there were
too many possible reasoning paths to follow, most of which turned out to be dead ends. To help
focus the search, he added the capability to create a numerical representation of a diagramâ€”a
particular case of the general theorem to be proved. Before the program tried to prove something,
it could first check the diagram to see if it was true in the particular case.

Starting in 1952, Arthur Samuel wrote a series of programs for checkers (draughts) that
eventually learned to play tournament-level checkers. Along the way, he disproved the idea that
computers can only do what they are told to, as his program quickly leamed to play a better game
than its creator. The program was demonstrated on television in February 1956, creating a very
strong impression. Like Turing, Samuel had trouble finding computer time. Working at night, he
used machines that were still on the testing floor at IBM's manufacturing plant. Chapter 5 covers
game playing, and Chapter 20 describes and expands on the learning techniques used by Samuel.

John McCarthy moved from Dartmouth to MIT and there made three crucial contributions
in onehistoric year: 1958. In MIT AI Lab Memo No. 1,McCarthy defined the high-level language
Lisp, which was to become the dominant AI programming language. Lisp is the second-oldest
language in current use.'> With Lisp, McCarthy had the tool he needed, but access to scarce and
expensive computing resources was also a serious problem. Thus, he and others at MIT invented
time sharing. After getting an experimental time-sharing system up at MIT, McCarthy eventually
attracted the interest of a group of MIT grads who formed Digital Equipment Corporation, which
was to become the world's second largest computer manufacturer, thanks to their time-sharing
minicomputers. Also in 1958, McCarthy published a paper entitled Programs with Common
Sense, in which he described the Advice Taker, a hypothetical program that can be seen as the
first complete AI system. Like the Logic Theorist and Geometry Theorem Prover, McCarthy's
program was designed to use knowledge to search for solutions to problems. Butunlikethe others,
it was to embody general knowledge of the world. For example, he showed how some simple
axioms would enable the program to generate a plan to drive to the airport to catch a plane. The
program was also designed so that it could accept new axioms in the normal course of operation,
thereby allowing it to achieve competence in new areas without being reprogrammed. The Advice
Taker thus embodied the central principles of knowledge representation and reasoning: that it
is useful to have a formal, explicit representation of the world and the way an agent's actions
affect the world, and to be able to manipulate these representations with deductive processes. It
is remarkable how much of the 1958 paper remains relevant after more than 35 years.

1958 also marked the year that Marvin Minsky moved to MIT. For years he and McCarthy
were inseparable as they defined the field together. But they grew apart as McCarthy stressed
representation and reasoning in formal logic, whereas Minsky was more interested in getting
programs to work, and eventually developed an anti-logical outlook. In 1963, McCarthy took
the opportunity to go to Stanford and start the AI lab there. His research agenda of using
logic to build the ultimate Advice Taker was advanced by J. A. Robinson's discovery of the
resolution method (a complete theorem-proving algorithm for first-order logic; see Section 9.6).
Work at Stanford emphasized general-purpose methods for logical reasoning. Applications of

15 FORTRAN is one year older than Lisp

le

mic
