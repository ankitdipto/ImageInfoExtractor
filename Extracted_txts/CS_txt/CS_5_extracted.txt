644

Chapter 24 Single-Source Shortest Paths

Edge weights can represent metrics other than distances, such as time, cost,
penalties, loss, or any other quantity that accumulates linearly along a path and
that we would want to minimize.

The breadth-first-search algorithm from Section 22.2 is a shortest-paths algo-
rithm that works on unweighted graphs, that is, graphs in which each edge has unit
weight. Because many of the concepts from breadth-first search arise in the study
of shortest paths in weighted graphs, you might want to review Section 22.2 before
proceeding.

Variants

In this chapter, we shall focus on the single-source shortest-paths problem: given
a graph G = (V, E), we want to find a shortest path from a given source vertex
s € V to each vertex v € V. The algorithm for the single-source problem can
solve many other problems, including the following variants.

Single-destination shortest-paths problem: Find a shortest path to a given des-
tination vertex t from each vertex v. By reversing the direction of each edge in
the graph, we can reduce this problem to a single-source problem.

Single-pair shortest-path problem: Find a shortest path from u to v for given
vertices u and v. If we solve the single-source problem with source vertex u,
we solve this problem also. Moreover, all known algorithms for this problem
have the same worst-case asymptotic running time as the best single-source
algorithms.

All-pairs shortest-paths problem: Find a shortest path from u to v for every pair
of vertices u and v. Although we can solve this problem by running a single-
source algorithm once from each vertex, we usually can solve it faster. Addi-
tionally, its structure is interesting in its own right. Chapter 25 addresses the
all-pairs problem in detail.

Optimal substructure of a shortest path

Shortest-paths algorithms typically rely on the property that a shortest path be-
tween two vertices contains other shortest paths within it. (The Edmonds-Karp
maximum-flow algorithm in Chapter 26 also relies on this property.) Recall
that optimal substructure is one of the key indicators that dynamic programming
(Chapter 15) and the greedy method (Chapter 16) might apply. Dijkstra’s algo-
rithm, which we shall see in Section 24.3, is a greedy algorithm, and the Floyd-
Warshall algorithm, which finds shortest paths between all pairs of vertices (see
Section 25.2), is a dynamic-programming algorithm. The following lemma states
the optimal-substructure property of shortest paths more precisely.
