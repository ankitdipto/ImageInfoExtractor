Chapter 1: Getting Started 3

 

learn C today”. I seriously beg to differ with this opinion. There
are several reasons for this:

(a)

()

()

@

I believe that nobody can learn C++ or Java directly. This is
because while learning these languages you have things like
classes, objects, inheritance, polymorphism, templates,
exception handling, references, etc. do deal with apart from
knowing the actual language elements. Learning these
complicated concepts when you are not even comfortable
with the basic language elements is like putting the cart before
the horse. Hence one should first learn all the language
elements very thoroughly using C language before migrating
to C++, C# or Java. Though this two step learning process
may take more time, but at the end of it you will definitely
find it worth the trouble.

C+, C# or Java make use of a principle called Object
Oriented Programming (OOP) to organize the program. This
organizing principle has lots of advantages to offer. But even
while using this organizing principle you would still need a
good hold over the language elements of C and the basic
programming skills.

Though many C++ and Java based programming tools and
frameworks have evolved over the years the importance of C
is still unchallenged because knowingly or unknowingly while
using these frameworks and tools you would be still required
to use the core C language elements—another good reason
why one should learn C before C++, C# or Java.

Major parts of popular operating systems like Windows,
UNIX, Linux is still written in C. This is because even today
when it comes to performance (speed of execution) nothing
beats C. Moreover, if one is to extend the operating system to
work with new devices one needs to write device driver
programs. These programs are exclusively written in C.
