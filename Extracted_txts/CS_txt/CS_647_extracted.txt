28

Let Us C

 

()

@®

are perfectly valid, since the addition is performed on the
ASCII values of the characters and not on characters
themselves. The ASCII values of ‘a’ and ‘b’ are 97 and 98,
and hence can definitely be added.

No operator is assumed to be present. It must be written
explicitly. In the following example, the multiplication
operator after b must be explicitly written.

a =c.d.b(xy) usual arithmetic statement
b=c*d*b*(x*y) C statement

Unlike other high level languages, there is no operator for
performing exponentiation operation. Thus following
statements are invalid.

a=3"2;

b=3%2;

If we want to do the exponentiation we can get it done this
way:

#include <math.h>

main()
{
int a;
a= pow (3,2);

printf (*%d', a);

Here pow( ) function is a standard library function. It is being
used to raise 3 to the power of 2. #include <math.h> is a
preprocessor directive. It is being used here to ensure that the
pow( ) function works correctly. We would learn more about
standard library functions in Chapter 5 and about preprocessor
in Chapter 7.
