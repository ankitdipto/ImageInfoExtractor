34 Let Us C

 

encountered many out of these 45 operators, so we won’t pursue
the subject of precedence any further here. However, it can be
realized at this stage that it would be almost impossible to
remember the precedence of all these operators. So a full-fledged
list of all operators and their precedence is given in Appendix A.
This may sound daunting, but when its contents are absorbed in
small bites, it becomes more palatable.

So far we have seen how the computer evaluates an arithmetic
statement written in C. But our knowledge would be incomplete
unless we know how to convert a general arithmetic statement to a
C statement. C can handle any complex expression with ease.
Some of the examples of C expressions are shown in Figure 1.9.

 

 

 

Algebric Expression C Expression
axb-cxd a*b-c*d
(m + n) (a + b) (m+ n) * (a+b)
3x2 + 2x + 5 3*x*xt+2*xt+ 5

atbt+e (atb+c)/(d+e)

d+e

2*b*y/(d+1)—-x/

2BY x 3*(z4+y)

d+l 3(z+y)

 

 

 

 

 

 

Figure 1.9

Associativity of Operators

When an expression contains two operators of equal priority the tie
between them is settled using the associativity of the operators.
Associativity can be of two types—Left to Right or Right to Left.
Left to Right associativity means that the left operand must be
