176 —cuarrenso Programming the Baste Computer

assembly language

machine language

bols, this type of symbolic program is referred to as an assembly language
program.

4. High-level programming languages. These are special languages developed
to reflect the procedures used in the solution of a problem rather than
be concerned with the computer hardware behavior. An example of a
high-level programming language is Fortran. It employs problem-
oriented symbols and formats. The program is written in a sequence of
statements in a form that people prefer to think in when solving a
problem. However, each statement must be translated into a sequence
of binary instructions before the program can be executed in a com-
puter. The program that translates a high-level language program to
binary is called a compiler.

Strictly speaking, a machine language program is a binary program of
category 1. Because of the simple equivalency between binary and octal or
hexadecimal representation, it is customary to refer to category 2 as machine
language. Because of the one-to-one relationship between a symbolic instruc-
tion and its binary equivalent, an assembly language is considered to be a
machine-level language.

‘We now use the basic computer to illustrate the relation between binary
and assembly languages. Consider the binary program listed in Table 6-2. The
first column gives the memory location (in binary) of each instruction or
operand. The second column lists the binary content of these memory loca-
tions. (The location is the address of the memory word where the instruction
is stored. It is important to differentiate it from the address part of the instruc-
tion itself.) The program can be stored in the indicated portion of memory, and
then executed by the computer starting from address 0. The hardware of the
computer will execute these instructions and perform the intended task. How-
ever, a person looking at this program will have a difficult time understanding
what is to be achieved when this program is executed. Nevertheless, the
computer hardware recognizes only this type of instruction code.

TABLE 62 Binary Program to Add Two Numbers

 

Location _ Instruction code

0 0010 0000 0000 0100

10001 0000 0000 o101
10 0011 0000 0000 0110
110111 0000 0000 0001
100 0000 0000 0101 0011
101 11 11 1110 1001
110 0000 0000 0000 0000
