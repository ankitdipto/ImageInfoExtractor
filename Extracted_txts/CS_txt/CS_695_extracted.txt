Chapter 2: The Decision Control Structure 67

 

I" else if ladder demo */
main()
{
int_ m1, m2, m3, m4, m6, per ;

per = (m1+m2+m3 + m4+ m5) / per;

if (per >= 60)

printf ( “First division” ) ;
else if (per >= 50 )

printf (“Second division” ) ;
else if (per >= 40)

printf (“Third division” ) ;
else

printf ( “fail” ) ;

}

You can note that this program reduces the indentation of the
statements. In this case every else is associated with its previous if.
The last else goes to work only if all the conditions fail. Even in
else if ladder the last else is optional.

Note that the else if clause is nothing different. It is just a way of
rearranging the else with the if that follows it. This would be
evident if you look at the following code:

 

if (i== 2) if (i==
printf ( “With you..." ) ; printf ( “With you...") ;
else else if (j == 2)
{ printf ("...All the time") ;
if(j==2)

printf ("...All the time" ) ;

Another place where logical operators are useful is when we want
to write programs for complicated logics that ultimately boil down
