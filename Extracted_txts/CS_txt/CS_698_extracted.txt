70

Let Us C

 

}

int age;

printf ("Enter age, sex, marital status ") ;
scant ("%d %c %c" &age, &Sex, &ms ) ;

    

if (( ms =="M) || (ms == 'U' && sex | && age > 30) ||
(ms =='U' && Sex == 'F' && age > 25 ))
printf ( "Driver is insured” ) ;
else
printf ( "Driver is not insured” ) ;

 

 

In this program it is important to note that:

The driver will be insured only if one of the conditions
enclosed in parentheses evaluates to true.

For the second pair of parentheses to evaluate to true, each
condition in the parentheses separated by && must evaluate to
true.

Even if one of the conditions in the second parentheses
evaluates to false, then the whole of the second parentheses
evaluates to false.

The last two of the above arguments apply to third pair of
parentheses as well.

Thus we can conclude that the && and || are useful in the
following programming situations:

(a) When it is to be tested whether a value falls within a

particular range or not.

(b) When after testing several conditions the outcome is only one

of the two answers (This problem is often called yes/no
problem).
