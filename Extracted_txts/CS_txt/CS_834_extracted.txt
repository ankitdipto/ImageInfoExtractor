180 Let Us C

 

We see that the computer has selected memory location 65524 as
the place to store the value 3. The location number 65524 is not a
number to be relied upon, because some other time the computer
may choose a different location for storing the value 3. The
important point is, i’s address in memory is a number.

We can print this address number through the following program:

 

   

main()
{
int i=3;
printf ("\nAddress of i = %u", &i ) ;

printf ( “\nValue of i = %d", i) ;
}

The output of the above program would be:

Address of i = 65524
Value of i = 3

Look at the first printf() statement carefully. ‘&’ used in this
statement is C’s ‘address of’ operator. The expression &i returns
the address of the variable i, which in this case happens to be
65524. Since 65524 represents an address, there is no question of a
sign being associated with it. Hence it is printed out using Yu,
which is a format specifier for printing an unsigned integer. We
have been using the ‘&’ operator all the time in the scanf()
statement.

The other pointer operator available in C is ‘*’, called ‘value at
address’ operator. It gives the value stored at a particular address.
The ‘value at address’ operator is also called ‘indirection’
operator.

Observe carefully the output of the following program:
