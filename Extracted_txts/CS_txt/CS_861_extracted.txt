Chapter 5: Functions & Pointers 201

 

Summary

(a)
()

(c)
@

(e)
()
(g)
(n)

@

To avoid repetition of code and bulky programs functionally
related statements are isolated into a function.

Function declaration specifies what is the return type of the
function and the types of parameters it accepts.

Function definition defines the body of the function.

Variables declared in a function are not available to other
functions in a program. So, there wonâ€™t be any clash even if
we give same name to the variables declared in different
functions.

Pointers are variables which hold addresses of other variables.
A function can be called either by value or by reference.
Pointers can be used to make a function return more than one
value simultaneously.

Recursion is difficult to understand, but in some cases offer a
better solution than loops.

Adding too many functions and calling them frequently may
slow down the program execution.

Exercise

Simple functions, Passing values between functions

[A] What would be the output of the following programs:

(a)

main()

{
printf ( "\nOnly stupids use C?") ;
display() ;

}
display()
{
printf ( "\nFools too use C!") ;

main() ;
}
