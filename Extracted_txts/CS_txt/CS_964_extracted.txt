Chapter 8: Arrays 285

 

int i, *j;
j = &num[0] ; /* assign address of zeroth element */
for (i=0;i1<=5; i++)

printf (“\naddress = %u", j) ;
printf ( "element = %d", *j) ;
j++; /* increment pointer to point to next location */
}
}

The output of this program would be:

address = 65512 element = 24
address = 65514 element = 34
address = 65516 element = 12
address = 65518 element = 44
address = 65520 element = 56
address = 65522 element = 17

In this program, to begin with we have collected the base address
of the array (address of the 0" element) in the variable j using the
statement,

j= &num|0] ; /* assigns address 65512 to j */

When we are inside the loop for the first time, j contains the
address 65512, and the value at this address is 24. These are
printed using the statements,

printf (“\naddress = %u", j) ;
printf ("element = %d", *j) ;

J
On incrementing j it points to the next memory location of its type
(that is location no. 65514). But location no. 65514 contains the
second element of the array, therefore when the printf( )
